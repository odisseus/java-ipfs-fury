name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the core module
      run: ./fury build run --output linear --project ipfs-http-client --module core
      timeout-minutes: 5
    - name: Run the unit tests for dependencies
      run: |
        ./fury build run --output linear --project multibase --module test -- io.ipfs.multibase.MultibaseTest
        ./fury build run --output linear --project multihash --module test -- io.ipfs.multihash.MultihashTest
        ./fury build run --output linear --project cid --module test -- io.ipfs.cid.CidTest
        ./fury build run --output linear --project multiaddr --module test -- io.ipfs.api.MultiAddressTest
    - name: Install IPFS
      run: |
        pushd /tmp
        mkdir ipfs-installer
        cd ipfs-installer
        wget --quiet https://github.com/ipfs/go-ipfs/releases/download/v0.5.1/go-ipfs_v0.5.1_linux-amd64.tar.gz
        tar -xvzf go-ipfs_v0.5.1_linux-amd64.tar.gz
        cd go-ipfs
        sudo bash install.sh
        ipfs --version
        #ipfs init
        #ipfs daemon & sleep 5
        popd
      timeout-minutes: 5
    - name: Run integration tests
      run: |
        TESTS_FAILED=0
        ./fury build run --output linear --project ipfs-http-client --module test -- io.ipfs.api.VersionsTest || TESTS_FAILED=1
        ./fury build run --output linear --project ipfs-http-client --module test --disable-security-manager -- io.ipfs.api.SimpleAddTest || TESTS_FAILED=1
        ./fury build run --output linear --project ipfs-http-client --module test --disable-security-manager -- io.ipfs.api.RecursiveAddTest || TESTS_FAILED=1
        ./fury build run --output linear --project ipfs-http-client --module test --disable-security-manager -- io.ipfs.api.AddTest || TESTS_FAILED=1
        ./fury build run --output linear --project ipfs-http-client --module test --disable-security-manager -- io.ipfs.api.APITest || TESTS_FAILED=1
        test $TESTS_FAILED == 0
      timeout-minutes: 5
    - name: Package logs
      if: always()
      run: find ~/.cache/fury -type f -name '*.log' | tar cvzf logs.tar.gz --files-from -
    - uses: actions/upload-artifact@v1.0.0
      if: always()
      with:
        name: logs-${{ runner.os }}
        path: logs.tar.gz
