name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the core module
      run: ./fury build run --output linear --project ipfs-http-client --module core
      timeout-minutes: 5
    - name: Run the unit tests for dependencies
      run: |
        ./fury build run --output linear --project multibase --module test -- io.ipfs.multibase.MultibaseTest
        ./fury build run --output linear --project multihash --module test -- io.ipfs.multihash.MultihashTest
        ./fury build run --output linear --project cid       --module test -- io.ipfs.cid.CidTest
        ./fury build run --output linear --project multiaddr --module test -- io.ipfs.api.MultiAddressTest
    - name: Prepare the environment for integration tests
      run: |
        ./fury permission grant --project ipfs-http-client --module test --permission a46
        ./fury build save --output linear --project ipfs-http-client --module test --fat-jar --dir target
        ./fury repo fork -r java-ipfs-http-client -f /tmp/java-ipfs-http-client
        ./fury undo
        ./fury repo list
        cp target/ipfs-http-client-test.jar /tmp/java-ipfs-http-client
      timeout-minutes: 5
    - name: Install fresh IPFS
      run: |
        pushd /tmp
        mkdir ipfs-installer
        cd ipfs-installer
        wget --quiet https://github.com/ipfs/go-ipfs/releases/download/v0.5.1/go-ipfs_v0.5.1_linux-amd64.tar.gz
        tar -xvzf go-ipfs_v0.5.1_linux-amd64.tar.gz
        cd go-ipfs
        sudo bash install.sh
        popd
        pkill -f ipfs
        rm -rf ~/.ipfs
        ipfs init
        ipfs daemon & sleep 5  
      timeout-minutes: 5
    - name: Run integration tests
      run: |        
        TESTS_FAILED=0
        pushd /tmp/java-ipfs-http-client
        java -jar ipfs-http-client-test.jar io.ipfs.api.VersionsTest || TESTS_FAILED=1
        java -jar ipfs-http-client-test.jar io.ipfs.api.SimpleAddTest || TESTS_FAILED=1
        java -jar ipfs-http-client-test.jar io.ipfs.api.RecursiveAddTest || TESTS_FAILED=1
        java -jar ipfs-http-client-test.jar io.ipfs.api.AddTest || TESTS_FAILED=1
        java -jar ipfs-http-client-test.jar io.ipfs.api.APITest || TESTS_FAILED=1
        popd
        test $TESTS_FAILED == 0
      timeout-minutes: 5
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test-env
        path: /tmp/java-ipfs-http-client
    - name: Package logs
      if: always()
      run: find ~/.cache/fury -type f -name '*.log' | tar cvzf logs.tar.gz --files-from -
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: logs-${{ runner.os }}
        path: logs.tar.gz
